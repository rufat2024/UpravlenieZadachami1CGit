
#Область ДействияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИнициализироватьНаСервере(Отказ, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ДействияЭлементовФормы

&НаКлиенте
Процедура ТаблицаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТаблицаВыборНаКлиенте(Поле, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура СортироватьПоВозрастаниюКоманда(Команда)
	СортироватьТаблицуНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоУбываниюКоманда(Команда)
	СортироватьТаблицуНаКлиенте("Убыв");
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКоманда(Команда)
	УдалитьНаКлиенте();
КонецПроцедуры

#КонецОбласти

#Область Заполнение

&НаСервере
Процедура ИнициализироватьНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок				= Параметры.Заголовок;
	Операция				= Параметры.Операция;
	АдресПроизвольныхДанных = Параметры.АдресПроизвольныхДанных;
	ИнформационнаяБаза 		= Параметры.ИнформационнаяБаза;
	ПараметрыИБ 			= Параметры.ПараметрыИБ;
	
	ОбновитьТаблицуНаСервере();

КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуНаСервере()
	
	Ар_ИнформационныеБазы.ЗаполнитьТаблицуФормыКластераИзПроизвольныхДанных(ЭтаФорма);
	
	Количество = Таблица.Количество();

КонецПроцедуры

&НаСервере
Процедура ОбновитьПроизвольныеДанныеНаСервере(ДоступныеОперации)
	
	Если Операция = ДоступныеОперации.СеансыИнформационнойБазы Тогда 
		
		Сеансы 					= Ар_ИнформационныеБазыВызовСервера.СеансыИнформационнойБазы(ПараметрыИБ.ПараметрыКластера, ПараметрыИБ.ПараметрыИБ);
		АдресПроизвольныхДанных = ПоместитьВоВременноеХранилище(Сеансы);
		
	ИначеЕсли Операция = ДоступныеОперации.СоединенияСИнформационнойБазой Тогда 
		
		Соединения			= Ар_ИнформационныеБазыВызовСервера.СоединенияСИнформационнойБазой(ПараметрыИБ.ПараметрыКластера, ПараметрыИБ.ПараметрыИБ);
		АдресПроизвольныхДанных = ПоместитьВоВременноеХранилище(Сеансы);
		
	КонецЕсли;
	
	ОбновитьТаблицуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыборНаКлиенте(Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Таблица.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда 
		
		Данные = ТекущиеДанные[Поле.Заголовок];
		
		Если ТипЗнч(Данные) = Тип("Структура") Тогда 
			
			Массив = Новый Массив();
			Массив.Добавить(Данные);
			
			ПараметрыОткрытия 	= Новый Структура();
			ПараметрыОткрытия.Вставить("АдресПроизвольныхДанных", ПоместитьВоВременноеХранилище(Массив));
			
			ОткрытьФорму("Справочник.Ар_ИнформационныеБазы.Форма.Кластер_Сеансы", ПараметрыОткрытия, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СортироватьТаблицуНаКлиенте(Направление = "")
	
	Перем ТекущийЭлементТаблицы;
	
	ТекущийЭлементТаблицы = Элементы.Таблица.ТекущийЭлемент;
	
	Если ТекущийЭлементТаблицы <> Неопределено Тогда 
		Таблица.Сортировать(СтрШаблон("%1 %2", ТекущийЭлементТаблицы.Заголовок, Направление));	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНаКлиенте()
	
	ДоступныеОперации 	= Ар_ИнформационныеБазыКлиент.ПолучитьСписокДоступныхОперацийКластера(); 
	ВыделенныеСтроки 	= Элементы.Таблица.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() > 0 Тогда 
		
		МассивНомеров = Новый Массив;
		
		Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл 
			
			Строка = Таблица.НайтиПоИдентификатору(ВыделеннаяСтрока);
			
			Если Строка <> Неопределено Тогда 
				МассивНомеров.Добавить(Строка.Номер);
			КонецЕсли;
			
		КонецЦикла;
		
		Фильтры = Новый Массив;
		
		Условие = Новый Структура();
		Условие.Вставить("Свойство", "Номер");
		Условие.Вставить("Значение", МассивНомеров);
		Условие.Вставить("ВидСравнения", ВидСравнения.ВСписке);
		Фильтры.Добавить(Условие);
		
		Если Операция = ДоступныеОперации.СеансыИнформационнойБазы Тогда 
			Ар_ИнформационныеБазыКлиент.УдалитьСеансыИнформационнойБазы(ВладелецФормы, ИнформационнаяБаза, ПараметрыИБ, Фильтры);
		ИначеЕсли Операция = ДоступныеОперации.СоединенияСИнформационнойБазой Тогда 
			Ар_ИнформационныеБазыКлиент.РазорватьСоединенияСИнформационнойБазой(ВладелецФормы, ИнформационнаяБаза, ПараметрыИБ, Фильтры);
		КонецЕсли;
		
		ОбновитьПроизвольныеДанныеНаСервере(ДоступныеОперации);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Общее

#КонецОбласти
