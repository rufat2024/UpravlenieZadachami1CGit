
Функция ПолучитьПараметрыКластера(База, ДополнительныеПараметры = Неопределено) Экспорт 
	
	ОтказКластера		= Ложь;
	ОшибкаКластера		= "";
	ОтказИБ				= Ложь;
	ОшибкаИБ			= "";
	Данные 				= Новый Структура("ПараметрыКластера, ПараметрыИБ, ОшибкаИБ, ОшибкаКластера, ОтказИБ, ОтказКластера, Отказ");
	ДанныеКоманды 		= Справочники.Ар_ИнформационныеБазы.ПолучитьДанныеВыполненияКомандыКонфигурации(База, "");
	МассивИмяКластера 	= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДанныеКоманды.РасположениеИС.Кластер, ":");
	
	ПараметрыКластера	= Неопределено;
	
	Если ДополнительныеПараметры <> Неопределено Тогда 
		ДополнительныеПараметры.Свойство("ПараметрыКластера", ПараметрыКластера);
	КонецЕсли;	
	
	Если ДанныеКоманды.РасположениеИС.Тип = Перечисления.Ар_ТипыРасположенияИнформационныйБазы.НаСервере1СПредприятия Тогда 
		
		Если ПараметрыКластера = Неопределено Тогда 
			
			ПараметрыКластера 									= АдминистрированиеКластера.ПараметрыАдминистрированияКластера();
			ПараметрыКластера.ТипПодключения 					= "COM";
			ПараметрыКластера.АдресАгентаСервера                = ДанныеКоманды.РасположениеИС.Кластер;
			ПараметрыКластера.АдресСервераАдминистрирования     = ДанныеКоманды.РасположениеИС.Кластер;
			
			Если МассивИмяКластера.Количество() = 2 Тогда 
				ПараметрыКластера.ПортКластера                  = МассивИмяКластера[1];
			КонецЕсли;
						
			Если ДополнительныеПараметры <> Неопределено Тогда 
				ЗаполнитьЗначенияСвойств(ПараметрыКластера, ДополнительныеПараметры);	
			КонецЕсли;
			
			//проверим администрирования ИБ
			Попытка
				АдминистрированиеКластера.ПроверитьПараметрыАдминистрирования(ПараметрыКластера,, Истина, Ложь); 
			Исключение
				ОтказКластера	= Истина;
				ОшибкаКластера 	= ИнформацияОбОшибке().Описание;
			КонецПопытки;
		КонецЕсли;
		
		ПараметрыИБ											= АдминистрированиеКластера.ПараметрыАдминистрированияИнформационнойБазыКластера();
		ПараметрыИБ.ИмяВКластере                            = ДанныеКоманды.РасположениеИС.ИмяИС;
		ПараметрыИБ.ИмяАдминистратораИнформационнойБазы     = ДанныеКоманды.Авторизация.Логин;
		ПараметрыИБ.ПарольАдминистратораИнформационнойБазы  = ДанныеКоманды.Авторизация.Пароль;
		
		//проверим администрирования кластера
		Попытка
			АдминистрированиеКластера.ПроверитьПараметрыАдминистрирования(ПараметрыКластера, ПараметрыИБ, Ложь, Истина); 
		Исключение
			ОтказИБ 	= Истина;
			ОшибкаИБ 	= ИнформацияОбОшибке().Описание;
		КонецПопытки;
		
		Данные.ПараметрыКластера 	= ПараметрыКластера;
		Данные.ПараметрыИБ 			= ПараметрыИБ;
		
	Иначе 
		
		ОтказКластера 	= Истина;
		ОтказИБ 		= Истина;
		ОшибкаИБ		= "Данная информационная база не является серверной";
		
	КонецЕсли;
	
	Данные.ОтказКластера 		= ОтказКластера;
	Данные.ОшибкаКластера 		= ОшибкаКластера;
	Данные.ОтказИБ 				= ОтказИБ;
	Данные.ОшибкаИБ 			= ОшибкаИБ;
	Данные.Отказ				= ОтказКластера Или ОтказИБ;
	
	Возврат Данные;
	
КонецФункции

Процедура ЗаполнитьТаблицуФормыКластераИзПроизвольныхДанных(Форма) Экспорт 
	
	Данные = Неопределено;
	Форма.Таблица.Очистить();
	
	Если ЭтоАдресВременногоХранилища(Форма.АдресПроизвольныхДанных) Тогда 
		Данные = ПолучитьИзВременногоХранилища(Форма.АдресПроизвольныхДанных);
	КонецЕсли;
	
	Если Данные <> Неопределено
		И Данные.Количество() > 0 Тогда 
		
		Строка = Данные[0];
		
		//заполним реквизиты таблицы
		Реквизиты 			= Новый Массив;
		
		Для Каждого Элемент Из Строка Цикл 
			
			ОписаниеРеквизита = Новый РеквизитФормы(Элемент.Ключ, Новый ОписаниеТипов(), "Таблица");
			
			Если Форма.Элементы.Найти("Колонка" + ОписаниеРеквизита.Имя) = Неопределено Тогда 
				Реквизиты.Добавить(ОписаниеРеквизита);
			КонецЕсли;
			
		КонецЦикла;
		
		Форма.ИзменитьРеквизиты(Реквизиты);
		
		//заполним элементы формы
		Для Каждого Элемент Из Строка Цикл 
			
			Если Форма.Элементы.Найти("Колонка" + ОписаниеРеквизита.Имя) = Неопределено Тогда 
				
				Рек 			= Форма.Элементы.Добавить("Колонка" + Элемент.Ключ, Тип("ПолеФормы"), Форма.Элементы.Таблица);
				Рек.Вид 		= ВидПоляФормы.ПолеНадписи;
				Рек.ПутьКДанным = "Таблица" + "." + Элемент.Ключ;
				Рек.Заголовок 	= Элемент.Ключ;
			КонецЕсли;
		КонецЦикла; 		
		
		//заполним данными
		Для Каждого Строка Из Данные Цикл 
			
			НоваяСтрока = Форма.Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры