
&НаКлиенте
Функция ПолучитьСтруктуруПараметровЗапускаЗакгрузки() Экспорт
	СтруктураПараметровЗапуска = Новый Структура;
	СтруктураПараметровЗапуска.Вставить("Конфигурация", Неопределено);
	СтруктураПараметровЗапуска.Вставить("НаименованиеМодуля", "");
	СтруктураПараметровЗапуска.Вставить("НаименованиеМетода", "");
	СтруктураПараметровЗапуска.Вставить("АдресСМассивомФайлов", "");
	СтруктураПараметровЗапуска.Вставить("ВидЗагрузки", 1);
	Возврат СтруктураПараметровЗапуска;
КонецФункции



Функция ПолучитьСтруктуруФайлаКонфы() Экспорт
	
	СтруктураФайла = Новый Структура;
	СтруктураФайла.Вставить("КаталогФайла", "");
	СтруктураФайла.Вставить("ИмяФайла", "");
	СтруктураФайла.Вставить("ПолныйПутьФайла", "");
	СтруктураФайла.Вставить("ТекстФайла", "");
	СтруктураФайла.Вставить("РасширениеФайла", "");
	СтруктураФайла.Вставить("НаименованиеТипаОбъекта", "");
	СтруктураФайла.Вставить("НаименованиеОбъекта", "");
	СтруктураФайла.Вставить("ЗаголовокКаталогаОбъекта", "");
	Возврат СтруктураФайла;
	
КонецФункции



&НаКлиенте
Процедура ПрочитатьФайлыИПоместитьДляАнализа(АдресВременногоХранилищаНаФорме, УИДФормы,  КаталогКонфигурации, ВидЗагрузкиМодулей = 1) Экспорт 
	
	Если Не ЗначениеЗаполнено(КаталогКонфигурации) Тогда
		Сообщить("Не заполнен каталог с конфигурацией.");
		Возврат;
	КонецЕсли;	
	
	РазделительПутиКлиента = ПолучитьРазделительПутиКлиента();
	
	МассивСтрукутраОписанийМодулей = Новый Массив;
	
	Если ВидЗагрузкиМодулей  = 1 Тогда
	
		ПутьКПапкесОбщимиМодулями = КаталогКонфигурации+ РазделительПутиКлиента+ "CommonModules";
		
		МассивФайловМодулей = НайтиФайлы(ПутьКПапкесОбщимиМодулями, ПолучитьМаскуВсеФайлыКлиента(),Истина);
		
		
		Для Каждого ТекЭлементФайл  Из  МассивФайловМодулей Цикл
			Если ТекЭлементФайл.ЭтоФайл() Тогда
				СтруктураФайлаТек = ПолучитьСтруктуруФайлаКонфы();
				ЗаполнитьСтруктуруфайлаКонфыТекущимиДаннымиФайла(СтруктураФайлаТек, ТекЭлементФайл);
           		МассивСтрукутраОписанийМодулей.Добавить(СтруктураФайлаТек);
			КонецЕсли;	
		КонецЦикла;
		
	ИначеЕсли ВидЗагрузкиМодулей = 2 Тогда
		МассивСтрокОбъектов = ПолучитьМассивописнаийОбъектовМД();
		
		
		
		Для	Каждого	ТекСтрока Из МассивСтрокОбъектов Цикл
			МаасивНаименованийОбъ = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекСтрока,";");
			НаименованиеТипаОбъекта = МаасивНаименованийОбъ[0];
			ЗаголовокКаталогаОбъекта = МаасивНаименованийОбъ[1]; 
			ПутьПоискаФайловОбъМД = КаталогКонфигурации+РазделительПутиКлиента+ЗаголовокКаталогаОбъекта;         
			МассивФайловМодулей = НайтиФайлы(ПутьПоискаФайловОбъМД, ПолучитьМаскуВсеФайлыКлиента(),Ложь);
			
			Для	Каждого	ТекЭлементФайлМ Из МассивФайловМодулей Цикл
				Если ВРЕГ(ТекЭлементФайлМ.Расширение) = ".XML" Тогда
					НаименованиеОбъекта = ТекЭлементФайлМ.ИмяБезРасширения;
					
					ПутьПоискаМодулейОбъекта = ПутьПоискаФайловОбъМД + РазделительПутиКлиента + 
											   ТекЭлементФайлМ.ИмяБезРасширения + РазделительПутиКлиента +"Ext";
				    МассивФайловМодулейМ = НайтиФайлы(ПутьПоискаМодулейОбъекта, ПолучитьМаскуВсеФайлыКлиента(),Истина);
					ЕстьТекстМодулей = Ложь;
					Для Каждого ТекЭлементФайл Из МассивФайловМодулейМ Цикл					
						Если ВРЕГ(ТекЭлементФайл.Расширение) = ".BSL" Тогда
							СтруктураФайлаТек = ПолучитьСтруктуруФайлаКонфы();
							ЗаполнитьСтруктуруфайлаКонфыТекущимиДаннымиФайла(СтруктураФайлаТек, ТекЭлементФайл);
							
							СтруктураФайлаТек.НаименованиеТипаОбъекта  =  НаименованиеТипаОбъекта; 
							СтруктураФайлаТек.НаименованиеОбъекта = НаименованиеОбъекта;
							СтруктураФайлаТек.ЗаголовокКаталогаОбъекта = ЗаголовокКаталогаОбъекта;
							
							МассивСтрукутраОписанийМодулей.Добавить(СтруктураФайлаТек);
							ЕстьТекстМодулей = Истина;
						КонецЕсли;  
					КонецЦикла;	
					Если ЕстьТекстМодулей Тогда
						СтруктураФайлаТек = ПолучитьСтруктуруФайлаКонфы(); 
						ЗаполнитьСтруктуруфайлаКонфыТекущимиДаннымиФайла(СтруктураФайлаТек, ТекЭлементФайлМ);
												
					    СтруктураФайлаТек.НаименованиеТипаОбъекта  =  НаименованиеТипаОбъекта; 
						СтруктураФайлаТек.НаименованиеОбъекта = НаименованиеОбъекта;
						СтруктураФайлаТек.ЗаголовокКаталогаОбъекта = ЗаголовокКаталогаОбъекта;
						
						
						МассивСтрукутраОписанийМодулей.Добавить(СтруктураФайлаТек);
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	АдресВременногоХранилищаНаФорме = ПоместитьВоВременноеХранилище(МассивСтрукутраОписанийМодулей, УИДФормы);
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьСтруктуруфайлаКонфыТекущимиДаннымиФайла(СтруктураФайлаТек, ТекущийФайл)
	СтруктураФайлаТек.КаталогФайла = ТекущийФайл.Путь;
	СтруктураФайлаТек.ИмяФайла = ТекущийФайл.ИмяБезРасширения;
	СтруктураФайлаТек.РасширениеФайла = ТекущийФайл.Расширение;
	СтруктураФайлаТек.ПолныйПутьФайла = ТекущийФайл.ПолноеИмя;
			
	ЧтениеТекстаТекФайла = Новый ЧтениеТекста(ТекущийФайл.ПолноеИмя);
	СтруктураФайлаТек.ТекстФайла = ЧтениеТекстаТекФайла.Прочитать();	
	
КонецПроцедуры	


Функция ПолучитьМассивописнаийОбъектовМД()
	МассивТипоОбъектовМД = Новый Массив();
	МассивТипоОбъектовМД.Добавить("Справочник;Catalogs");	
	МассивТипоОбъектовМД.Добавить("Документ;Documents");	
	МассивТипоОбъектовМД.Добавить("Перечисление;Enums");	
	МассивТипоОбъектовМД.Добавить("Константа;Constants");	
	МассивТипоОбъектовМД.Добавить("ЖурналДокумента;DocumentJournals");	
	МассивТипоОбъектовМД.Добавить("Отчет;Reports");	
	МассивТипоОбъектовМД.Добавить("Обработка;DataProcessors");	
	МассивТипоОбъектовМД.Добавить("ПланВидовХарактеристик;ChartsOfCharacteristicTypes");	
	МассивТипоОбъектовМД.Добавить("ПланСчетов;ChartsOfAccounts");	
	МассивТипоОбъектовМД.Добавить("ПланВидовРасчета;ChartsOfCalculationTypes");	
	МассивТипоОбъектовМД.Добавить("РегистрСведений;InformationRegisters");	
	МассивТипоОбъектовМД.Добавить("РегистрНакопления;AccumulationRegisters");	
	МассивТипоОбъектовМД.Добавить("РегистрБухгалтерии;AccountingRegisters");	
	МассивТипоОбъектовМД.Добавить("РегистрРасчета;CalculationRegisters");	
	МассивТипоОбъектовМД.Добавить("БизнесПроцесс;BusinessProcesses");	
	
	Возврат МассивТипоОбъектовМД;
КонецФункции	

