
&НаКлиенте
Процедура ВыбратьКаталог()
	
	Если Не ЗначениеЗаполнено(Объект.ВыбраннаяКонфигурация) Тогда
		Сообщить("Сначала заполните конфигурацию.");
		Возврат;
	КонецЕсли;	
	
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ВыборФайла.ПроверятьСуществованиеФайла = Истина;
	ВыборФайла.Заголовок = "Выберите каталог размещения выгруженнной конфигурации ";
	Если НЕ ВыборФайла.Выбрать() Тогда
		Возврат;
	КонецЕсли; 
	
	объект.КаталогФайловКонфигурации = ВыборФайла.Каталог;
	УстановитьКаталогВРегистр();
	

КонецПроцедуры

&НаСервере
Процедура УстановитьКаталогВРегистр()
	Если объект.КаталогФайловКонфигурации <> "" Тогда
		РегистрыСведений.АМ_КаталогиФайловМодулейКонфигураций.ЗаписатьКаталогПоКонфигурации(Объект.ВыбраннаяКонфигурация, объект.КаталогФайловКонфигурации);
	КонецЕсли;	
КонецПроцедуры	


&НаКлиенте
Процедура КаталогФайловКонфигурацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьКаталог();
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаТекстовМодулейНаСервере(ПараметрыЗапуска)
	
	АМ_РаботаСТекстомПроцедурИФункцийСервер.РазобратьМассивФайловНаСервере(ПараметрыЗапуска);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаТекстовМодулей(Команда)
	Если Не ЗначениеЗаполнено(Объект.ВидЗагрузки) Тогда
		Объект.ВидЗагрузки = 1;
	КонецЕсли;	
	
	АМ_РаботаСТекстомПроцедурИФункцийКлиентСервер.ПрочитатьФайлыИПоместитьДляАнализа(Объект.АдресМассиваОписанияМодулей, ЭтаФорма.УникальныйИдентификатор, Объект.КаталогФайловКонфигурации, Объект.ВидЗагрузки);
	
	ПараметрыЗапуска  = АМ_РаботаСТекстомПроцедурИФункцийКлиентСервер.ПолучитьСтруктуруПараметровЗапускаЗакгрузки();
	ПараметрыЗапуска.Конфигурация = объект.ВыбраннаяКонфигурация;
	ПараметрыЗапуска.НаименованиеМодуля =  объект.ЗагружатьТолькоМодуль;
	ПараметрыЗапуска.НаименованиеМетода = объект.ЗагружатьТолькоМетод;
	ПараметрыЗапуска.АдресСМассивомФайлов = Объект.АдресМассиваОписанияМодулей; 
	ПараметрыЗапуска.ВидЗагрузки = Объект.ВидЗагрузки; 
	
	ЗагрузкаТекстовМодулейНаСервере(ПараметрыЗапуска);
КонецПроцедуры

//&НаКлиенте
//Процедура ПрочитатьФайлыИПоместитьДляАнализа()  
//	РазделительПутиКлиента = ПолучитьРазделительПутиКлиента();
//	ПутьКПапкесОбщимиМодулями = Объект.КаталогФайловКонфигурации + РазделительПутиКлиента+ "CommonModules";
//	
//	МассивФайловМодулей = НайтиФайлы(ПутьКПапкесОбщимиМодулями, ПолучитьМаскуВсеФайлыКлиента(),Истина);
//	
//    ЗаполнитьМассивСтрукутрФайловДляАнализа(МассивФайловМодулей);
//КонецПроцедуры	

//&НаКлиенте
//Процедура ЗаполнитьМассивСтрукутрФайловДляАнализа(МассивФайловМодулей)
//	МассивСтрукутраОписанийМодулей = Новый Массив;
//	Для Каждого ТекЭлементФайл  Из  МассивФайловМодулей Цикл
//		Если ТекЭлементФайл.ЭтоФайл() Тогда
//			СруктураФайлаТек = ПолучитьСтруктуруФайлаКонфы();
//			СруктураФайлаТек.КаталогФайла = ТекЭлементФайл.Путь;
//			СруктураФайлаТек.ИмяФайла = ТекЭлементФайл.ИмяБезРасширения;
//			СруктураФайлаТек.РасширениеФайла = ТекЭлементФайл.Расширение;
//			СруктураФайлаТек.ПолныйПутьФайла = ТекЭлементФайл.ПолноеИмя;
//		
//			ЧтениеТекстаТекФайла = Новый ЧтениеТекста(ТекЭлементФайл.ПолноеИмя);
//			СруктураФайлаТек.ТекстФайла = ЧтениеТекстаТекФайла.Прочитать();
//			МассивСтрукутраОписанийМодулей.Добавить(СруктураФайлаТек);
//		КонецЕсли;	
//	КонецЦикла;
//	Объект.АдресМассиваОписанияМодулей = ПоместитьВоВременноеХранилище(МассивСтрукутраОписанийМодулей, ЭтаФорма.УникальныйИдентификатор);
//КонецПроцедуры

//&НаКлиенте
//Функция ПолучитьСтруктуруФайлаКонфы()
//	
//	Возврат ПолучитьСтруктуруФайлаКонфы_НаСервере();
//КонецФункции

//&НаСервере
//Функция ПолучитьСтруктуруФайлаКонфы_НаСервере()
//	Возврат АМ_РаботаСТекстомПроцедурИФункцийСервер.ПолучитьСтруктуруФайлаКонфы();
//КонецФункции

&НаСервере
Процедура ВыбраннаяКонфигурацияПриИзмененииНаСервере()
	Объект.КаталогФайловКонфигурации = РегистрыСведений.АМ_КаталогиФайловМодулейКонфигураций.ПолучитьКаталогПоКонфигурации(Объект.ВыбраннаяКонфигурация);
КонецПроцедуры

&НаКлиенте
Процедура ВыбраннаяКонфигурацияПриИзменении(Элемент)
	ВыбраннаяКонфигурацияПриИзмененииНаСервере();
КонецПроцедуры
