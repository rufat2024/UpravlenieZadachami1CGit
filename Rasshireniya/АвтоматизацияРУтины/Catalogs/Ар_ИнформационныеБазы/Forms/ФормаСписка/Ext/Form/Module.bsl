
#Область ДействияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИнициализироватьНаСервере(Отказ, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИнициализироватьНаКлиенте(Отказ);
КонецПроцедуры

#КонецОбласти

#Область ДействияЭлементовФормы

&НаКлиенте
Процедура ПутьКБазеНажатие(Элемент, СтандартнаяОбработка)
	ПутьКБазеНажатиеНаКлиенте(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяРазрядностьПриИзменении(Элемент)
	ОбновитьИнформационнуюБазуНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ТекущийРежимЗапускаПриИзменении(Элемент)
	ОбновитьИнформационнуюБазуНаКлиенте();
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ГрупповоеИзменение_ИзменитьВыделенныеКоманда(Команда)
	ГрупповоеИзменение_ИзменитьВыделенныеНаКлиенте();
КонецПроцедуры

#КонецОбласти

#Область Заполнение

&НаСервере
Процедура ИнициализироватьНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьИнформационныеБазы 	= Ложь;
	ТекущийПользователь 			= Пользователи.ТекущийПользователь();
	
	Если Не ТекущийПользователь.Пустая() Тогда 
		
		ИспользоватьИнформационныеБазы	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "Ар_ИспользоватьИнформационныеБазы");
		
	КонецЕсли;
	
	Если Не ИспользоватьИнформационныеБазы Тогда 
		Отказ = Истина;
		ВОЗВРАТ;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если СохраненныеНастройки = Неопределено Тогда 
		СохраненныеНастройки = Новый Структура("СоответствияПараметровКластера, СоответствиеПараметровИнформационныхБаз", Новый Соответствие, Новый Соответствие);
	КонецЕсли;
	
	ИзменитьВидимостьНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьНаКлиенте(Отказ)
	ОбновитьСписокБазНаКлиенте();	
КонецПроцедуры

&НаСервере
Процедура ИзменитьВидимостьНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПометкаУдаления", Ложь, 
		ВидСравненияКомпоновкиДанных.Равно, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ЭтоГруппа", Ложь, 
		ВидСравненияКомпоновкиДанных.Равно, "Без групп", Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец", Пользователи.ТекущийПользователь(), 
		ВидСравненияКомпоновкиДанных.Равно, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Конфигурация", , 
	//	ВидСравненияКомпоновкиДанных.Равно, , Ложь, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокБазНаКлиенте()
	Ар_ИнформационныеБазыКлиент.ОбновитьСписокБаз();
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ГрупповоеИзменение_ИзменитьВыделенныеНаКлиенте()
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список, Список);	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьГиперссылкуПутьКБазеНаКлиенте(Данные)
	
	Если Данные <> Неопределено Тогда 
		
		ТекущийТипРасположения 	= Данные.РасположениеИС.Тип; 
		
		Если Данные.РасположениеИС.Тип = ПредопределенноеЗначение("Перечисление.Ар_ТипыРасположенияИнформационныйБазы.НаСервере1СПредприятия") Тогда 
			ПутьКБазе = СтрШаблон("Srvr=""%1"";Ref=""%2"";", Данные.РасположениеИС.Кластер, Данные.РасположениеИС.ИмяИС);
		ИначеЕсли Данные.РасположениеИС.Тип = ПредопределенноеЗначение("Перечисление.Ар_ТипыРасположенияИнформационныйБазы.НаДанномКомпьютереИлиНаКомпьютереВЛокальнойСети") Тогда 
			ПутьКБазе = СтрШаблон("File=""%1"";", Данные.РасположениеИС.Адрес);
		ИначеЕсли Данные.РасположениеИС.Тип = ПредопределенноеЗначение("Перечисление.Ар_ТипыРасположенияИнформационныйБазы.НаВебСервере") Тогда 
			ПутьКБазе = СтрШаблон("ws=""%1"";", Данные.РасположениеИС.Адрес);
		КонецЕсли;
		
	Иначе 	
		ПутьКБазе = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКБазеНажатиеНаКлиенте(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Попытка
		ОбъектКопирования = Новый COMОбъект("htmlfile"); 
		ОбъектКопирования.ParentWindow.ClipboardData.SetData("Text", ПутьКБазе);
	Исключение
	КонецПопытки;
	
	Если ТекущийТипРасположения = ПредопределенноеЗначение("Перечисление.Ар_ТипыРасположенияИнформационныйБазы.НаДанномКомпьютереИлиНаКомпьютереВЛокальнойСети") Тогда 
		
		АдресФБ = Сред(ПутьКБазе, 7, СтрДлина(ПутьКБазе) - 8);
		
		ЗапуститьПриложение(АдресФБ);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДополнительныеДанныеНаКлиенте(Данные)
	
	Если Данные <> Неопределено Тогда 
		
		Элементы.ТекущаяРазрядность.Доступность = Данные.ЛичныйФайл;
		Элементы.ТекущийРежимЗапуска.Доступность = Данные.ЛичныйФайл;
		
		ТекущаяРазрядность 	= Данные.Разрядность;
		ТекущийРежимЗапуска	= Данные.РежимЗапуска;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформационнуюБазуНаКлиенте()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда 
		
		Данные = Новый Структура;
		Данные.Вставить("Разрядность", ТекущаяРазрядность);
		Данные.Вставить("ОсновнойРежимЗапуска", ТекущийРежимЗапуска);
		
		ОбновитьИнформационнуюБазуНаСервереБезКонтекста(ТекущиеДанные.Ссылка, Данные);
		Ар_ИнформационныеБазыКлиент.ОбновитьФайлСпискаБазПоИнформационнойБазе(ТекущиеДанные.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьИнформационнуюБазуНаСервереБезКонтекста(ИнформационнаяБаза, Данные)
	
	ОбъектИС = ИнформационнаяБаза.ПолучитьОбъект();
	ЗаполнитьЗначенияСвойств(ОбъектИС, Данные);
	ОбъектИС.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСписка

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущаяБаза = Неопределено;
	Данные		= Неопределено;
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда 
		ТекущаяБаза = Элементы.Список.ТекущиеДанные.Ссылка;	
	КонецЕсли;
	
	Если ТекущаяБаза <> Неопределено Тогда 
		Данные = Ар_ИнформационныеБазыВызовСервера.ПолучитьДанныеФормированияКоманды(ТекущаяБаза, "");
	КонецЕсли;	
	
	ОбновитьДополнительныеДанныеНаКлиенте(Данные);
	ОбновитьГиперссылкуПутьКБазеНаКлиенте(Данные);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	// СтандартныеПодсистемы.Взаимодействие
	ВзаимодействияКлиент.СписокПредметПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле);
	// Конец СтандартныеПодсистемы.Взаимодействие
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	// СтандартныеПодсистемы.Взаимодействие
	ВзаимодействияКлиент.СписокПредметПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле);
	// Конец СтандартныеПодсистемы.Взаимодействие
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область Общее

#КонецОбласти