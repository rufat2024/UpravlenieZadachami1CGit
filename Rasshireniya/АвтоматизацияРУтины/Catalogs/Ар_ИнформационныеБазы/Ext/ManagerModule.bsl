
Функция ИнициализироватьСтруктуруВыполненияКоманды() Экспорт 
	
	РасположениеИС = Новый Структура();
	РасположениеИС.Вставить("Тип");
	РасположениеИС.Вставить("Адрес");
	РасположениеИС.Вставить("Кластер");
	РасположениеИС.Вставить("ИмяИС");
	
	Авторизация = Новый Структура();
	Авторизация.Вставить("ВариантАутентификации");
	Авторизация.Вставить("Логин");
	Авторизация.Вставить("Пароль");
	
	Платформа = Новый Структура();
	Платформа.Вставить("Версия1С");
	Платформа.Вставить("Путь");
	
	Хранилище = Новый Структура();
	Хранилище.Вставить("Адрес");
	Хранилище.Вставить("Логин");
	Хранилище.Вставить("Пароль");
	
	Структура = Новый Структура();
	
	Структура.Вставить("УникальныйИдентификатор");
	Структура.Вставить("Наименование");
	Структура.Вставить("Режим");
	Структура.Вставить("РежимЗапуска");
	Структура.Вставить("Разрядность");
	Структура.Вставить("ДополнительныеПараметрыЗапуска");
	Структура.Вставить("ВнешняяОбработка");
	Структура.Вставить("РасположениеИС", РасположениеИС);
	Структура.Вставить("Авторизация", Авторизация);
	Структура.Вставить("Платформа", Платформа);
	Структура.Вставить("Хранилище", Хранилище);
	
	Структура.Вставить("ЛичныйФайл");
	Структура.Вставить("ПутьКФайлуСписка");
	
	Возврат Структура
	
КонецФункции

Функция ПолучитьДанныеВыполненияКомандыКонфигурации(ИнформационнаяБаза, Режим) Экспорт 
	
	ДанныеКоманды 		= ИнициализироватьСтруктуруВыполненияКоманды();
	ДанныеБазы 			= ПолучитьДанныеКонфигурации(ИнформационнаяБаза);
	
	//основные настройки
	ДанныеКоманды.Наименование						= ДанныеБазы.Наименование;
	ДанныеКоманды.Режим								= Режим;
	ДанныеКоманды.РежимЗапуска 						= ДанныеБазы.ОсновнойРежимЗапуска;
	ДанныеКоманды.Разрядность 						= ДанныеБазы.Разрядность;
	ДанныеКоманды.ДополнительныеПараметрыЗапуска 	= ДанныеБазы.ДополнительныеПараметрыЗапуска;
	ДанныеКоманды.ВнешняяОбработка 					= ДанныеБазы.ВнешняяОбработка;
	ДанныеКоманды.УникальныйИдентификатор			= ДанныеБазы.УникальныйИдентификатор;
	
	ДанныеКоманды.ПутьКФайлуСписка 					= ДанныеБазы.ПутьКФайлуСписка;
	ДанныеКоманды.ЛичныйФайл 						= ДанныеБазы.ЛичныйФайл;
	
	//Расположение ИС
	ДанныеКоманды.РасположениеИС.Тип				= ДанныеБазы.ТипРасположенияИнформационныйБазы; 
	ДанныеКоманды.РасположениеИС.Кластер			= ДанныеБазы.КластерСерверов; 
	ДанныеКоманды.РасположениеИС.ИмяИС				= ДанныеБазы.ИмяИнформационнойБазы; 
	
	Если ДанныеБазы.ТипРасположенияИнформационныйБазы = Перечисления.Ар_ТипыРасположенияИнформационныйБазы.НаДанномКомпьютереИлиНаКомпьютереВЛокальнойСети Тогда 
		ДанныеКоманды.РасположениеИС.Адрес			= ДанныеБазы.КаталогИнформационнойБазы;
	ИначеЕсли ДанныеБазы.ТипРасположенияИнформационныйБазы = Перечисления.Ар_ТипыРасположенияИнформационныйБазы.НаВебСервере Тогда 
		ДанныеКоманды.РасположениеИС.Адрес			= ДанныеБазы.АдресИнформационнойБазы;
	КонецЕсли;
	
	//Авторизация
	ДанныеКоманды.Авторизация.ВариантАутентификации	= ДанныеБазы.ВариантАутентификации;
	ДанныеКоманды.Авторизация.Логин					= ДанныеБазы.Логин;
	ДанныеКоманды.Авторизация.Пароль				= ДанныеБазы.Пароль;
	
	//Платформа
	ДанныеКоманды.Платформа.Версия1С				= ДанныеБазы.Версия1С;
	
	//Хранилище
	ДанныеКоманды.Хранилище.Адрес					= ДанныеБазы.ХранилищеПуть;
	ДанныеКоманды.Хранилище.Логин					= ДанныеБазы.ЛогинХранилища;
	ДанныеКоманды.Хранилище.Пароль					= ДанныеБазы.ПарольХранилища;
	
	Возврат ДанныеКоманды
	
КонецФункции

Функция ПолучитьДанныеКонфигурации(ИнформационнаяБаза) Экспорт 
	
	Структура = Новый Структура();
	Структура.Вставить("Ссылка");
	Структура.Вставить("Наименование");
	Структура.Вставить("Конфигурация");
	Структура.Вставить("ТипРасположенияИнформационныйБазы");
	Структура.Вставить("Логин");
	Структура.Вставить("Пароль");
	Структура.Вставить("Хранилище");
	Структура.Вставить("ХранилищеПуть");
	Структура.Вставить("ЛогинХранилища");
	Структура.Вставить("ПарольХранилища");
	Структура.Вставить("ДополнительныеПараметрыЗапуска");
	Структура.Вставить("Версия1С");
	Структура.Вставить("Разрядность");
	Структура.Вставить("КаталогИнформационнойБазы");
	Структура.Вставить("АдресИнформационнойБазы");
	Структура.Вставить("КластерСерверов");
	Структура.Вставить("ИмяИнформационнойБазы");
	Структура.Вставить("ОсновнойРежимЗапуска");
	Структура.Вставить("ВнешняяОбработка");
	Структура.Вставить("УникальныйИдентификатор");
	Структура.Вставить("ЛичныйФайл");
	Структура.Вставить("ПутьКФайлуСписка");
	Структура.Вставить("ВариантАутентификации");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Ар_ИнформационныеБазы.Ссылка КАК Ссылка,
		|	Ар_ИнформационныеБазы.Наименование КАК Наименование,
		|	Ар_ИнформационныеБазы.Конфигурация КАК Конфигурация,
		|	Ар_ИнформационныеБазы.ТипРасположенияИнформационныйБазы КАК ТипРасположенияИнформационныйБазы,
		|	Ар_ИнформационныеБазы.Логин КАК Логин,
		|	Ар_ИнформационныеБазы.Пароль КАК Пароль,
		|	Ар_ИнформационныеБазы.Хранилище КАК Хранилище,
		|	Ар_ИнформационныеБазы.Хранилище.Путь КАК ХранилищеПуть,
		|	Ар_ИнформационныеБазы.ЛогинХранилища КАК ЛогинХранилища,
		|	Ар_ИнформационныеБазы.ПарольХранилища КАК ПарольХранилища,
		|	Ар_ИнформационныеБазы.ДополнительныеПараметрыЗапуска КАК ДополнительныеПараметрыЗапуска,
		|	Ар_ИнформационныеБазы.Версия1С КАК Версия1С,
		|	Ар_ИнформационныеБазы.Разрядность КАК Разрядность,
		|	Ар_ИнформационныеБазы.КаталогИнформационнойБазы КАК КаталогИнформационнойБазы,
		|	Ар_ИнформационныеБазы.АдресИнформационнойБазы КАК АдресИнформационнойБазы,
		|	Ар_ИнформационныеБазы.КластерСерверов КАК КластерСерверов,
		|	Ар_ИнформационныеБазы.ИмяИнформационнойБазы КАК ИмяИнформационнойБазы,
		|	Ар_ИнформационныеБазы.ОсновнойРежимЗапуска КАК ОсновнойРежимЗапуска,
		|	Ар_ИнформационныеБазы.УникальныйИдентификатор КАК УникальныйИдентификатор,
		|	Ар_ИнформационныеБазы.ВнешняяОбработка КАК ВнешняяОбработка,
		|	Ар_ИнформационныеБазы.ПутьКФайлуСписка КАК ПутьКФайлуСписка,
		|	ЕстьNull(Ар_ИнформационныеБазы.ЛичныйФайл, Ложь) КАК ЛичныйФайл,
		|	Ар_ИнформационныеБазы.ВариантАутентификации КАК ВариантАутентификации
		|ИЗ
		|	Справочник.Ар_ИнформационныеБазы КАК Ар_ИнформационныеБазы
		|ГДЕ
		|	Ар_ИнформационныеБазы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ИнформационнаяБаза);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Структура, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	Возврат Структура
	
КонецФункции