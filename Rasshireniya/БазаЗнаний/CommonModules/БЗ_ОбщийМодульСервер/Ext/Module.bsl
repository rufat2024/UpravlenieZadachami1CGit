// Возвращает значение константы по имени из справочника Константы
//
// Параметры:
//  Имя  - строка - Имя элемента в Справочнике Контанты
//  ПоУмолчанию - значение Элемента по умолчанию, если не найден
//				Значения заполняются Обработкой Настройка БЗ
//
// Возвращаемое значение:
//   Любой   - Возвращает значение. Тип зависит от типа элемента справочника.
//
Функция ПолучитьКонстанту(Имя, ПоУмолчанию) Экспорт 
	Спр = Справочники.узКонстанты;
	Элем = Спр.НайтиПоНаименованию(Имя);
	Если Элем.Пустая() Тогда
		Нов = Спр.СоздатьЭлемент();
		Нов.Наименование = Имя;
		Нов.Значение = ПоУмолчанию;
		Нов.Записать();
		Элем = Нов.Ссылка;
	КонецЕсли;
	
	Возврат Элем.Значение;
	
КонецФункции

// Устанавливает значение В Справочнике Константы
//
// Параметры:
//  Имя  - строка - Имя элемента справочника Константы
//  Значение - значение элемента справочника по умолчанию
//				Значения заполняются Обработкой Настройка БЗ
//
Процедура УстановитьКонстанту(Имя, Значение) Экспорт 
	Спр = Справочники.узКонстанты;
	Элем = Спр.НайтиПоНаименованию(Имя);
	Если Элем.Пустая() Тогда
		Нов = Спр.СоздатьЭлемент();
		Нов.Наименование = Имя;
	Иначе
		Нов = Элем.ПолучитьОбъект();
	КонецЕсли;
	
	Нов.Значение = Значение;
	Нов.Записать();
	
КонецПроцедуры

Функция ЗаписатьСервер(ИмяФайла, СсылкаНаФайл) Экспорт
	
	Рез = "";
	
	Если ЭтоАдресВременногоХранилища(СсылкаНаФайл) Тогда
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(СсылкаНаФайл);
		Путь           = Справочники.УзКонстанты.НайтиПоНаименованию("ПутьБЗ").Значение;
		Имя            = Путь + ИмяФайла;
		ДвоичныеДанные.Записать(Имя);
		Рез = ИзвлечьТекстНаСервере(Имя);
	КонецЕсли;
	
	Возврат Рез;

КонецФункции

Функция ИзвлечьТекстНаСервере(ВыбранныйФайл) Экспорт
	
	ИзвлеченныйТекст = "";
	РасширениеФайла  = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ВыбранныйФайл);
	
	Если НРег(РасширениеФайла) = "pdf" Тогда
		ИзвлеченныйТекст = ИзвлечьТекстИзPDF(ВыбранныйФайл);
	Иначе
		ИзвлеченныйТекстСтрукт = РаботаСФайламиСлужебный.ИзвлечьТекстИзФайлаНаДиске(ВыбранныйФайл);
		
		Если ИзвлеченныйТекстСтрукт.СтатусИзвлеченияТекста = Перечисления.СтатусыИзвлеченияТекстаФайлов.Извлечен Тогда
			ИзвлеченныйТекст = ИзвлеченныйТекстСтрукт.ТекстХранилище.Получить();
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат ИзвлеченныйТекст;

КонецФункции

Функция ИзвлечьТекстИзPDF(ВыбФайл)
	РезТекст    = "";
	ПутьУтилиты = Справочники.УзКонстанты.НайтиПоНаименованию("pdftotext");
	
	Если ПутьУтилиты.Значение = Неопределено ИЛИ ПутьУтилиты.Значение = "" Тогда
		Возврат РезТекст;
	
	КонецЕсли;
	
	ИмяТемпФайл   = ПолучитьИмяВременногоФайла("txt");
	ИмяПриложения = ПутьУтилиты.Значение + " -table -enc UTF-8 -nodiag " + " """ + ВыбФайл + """ " + ИмяТемпФайл;
	Попытка
		ЗапуститьПриложение(ИмяПриложения, , Истина);
	Исключение
		ВызватьИсключение("Файл утилиты pdftotext.exe не найден");
	КонецПопытки;

		РезФайл  = Новый ЧтениеТекста(ИмяТемпФайл, КодировкаТекста.UTF8);
		РезТекст = РезФайл.Прочитать();
		РезТекст = ОбщегоНазначенияКлиентСервер.УдалитьНедопустимыеСимволыXML(РезТекст);
	
	Возврат РезТекст;

КонецФункции
